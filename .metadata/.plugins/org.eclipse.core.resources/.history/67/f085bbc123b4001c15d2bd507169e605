package com.kh.model.dao;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;

import static com.kh.common.JDBCTemplate.close;
import com.kh.medel.vo.Member;

public class MemberDAO {

	public int insertMember(Member mem, Connection conn) {//MemberService의 매개변수 맞추기 위해 conn 추가
	
			/*<이전 프로젝트에서 DAL가 맡은 업무>
			  1. JDBC드라이버 등록
			  2. DB연결 Connection 객체 생성
			  3. SQL 실행
			  4. 드랜잭션 처리
			  5. close, finally 자원 반납
			  
			  -->실제로는 DAO가 처리해야할 업무는 3번 업무 뿐,1,2,4,5은 DAO가 할 일이 아님.
			  		1,2,4,5 업무는 DAO의 역할이 아니며 어디서든 공통적으로 이루어지는 업무이기 때문에 역할 분리 : com.kh.common.JDBCemplate
			 */
			
		int result = 0;
		PreparedStatement pstmt = null;
		String query = "INSERT INTO MEMBER VALUES(?, ?, ?, ?, ?, ?, ?, ?, SYSDATE)";
		
		try {
			pstmt = conn.prepareStatement(query);
			pstmt.setString(1, mem.getMemberId());
			pstmt.setString(2, mem.getMemberPwd());
			pstmt.setString(3, mem.getMemberName());
			pstmt.setString(4, mem.getGender()+"");
			pstmt.setString(5, mem.getEmail());
			pstmt.setString(6, mem.getPhone());
			pstmt.setString(7, mem.getAddress());
			pstmt.setInt(8, mem.getAge());
			
			result = pstmt.executeUpdate();
			
		} catch (SQLException e) {
			e.printStackTrace();
		} finally {
//			JDBCTemplate.close(pstmt);
			close(pstmt);//import에 static, close 추가해서 위에 코드 JDBCTamplate 생략가능.
		}
		return result;
		
	}

	public ArrayList<Member> selectMemberId(Connection conn, String id) {
		//방법1. String query = "SELECT * FROM MEMBER WHERE MEMBER_ID LIKE % + ID + %";-->완성형 쿼리
		Statement stmt = null;
		ResultSet rset = null;
		ArrayList<Member> list = new ArrayList<Member>();
		
		String query ="SELECT * FROM MEMBER WHERE MEMBER_ID LIKE '%" + id + "%'";
		
		try {
			stmt = conn.createStatement();
			rset = stmt.executeQuery(query);
			while(rset.next()) {
				Member m = new Member(rset.getString("MEMBER_ID"),
									  rset.getString("MEMBER_PWD"),
									  rset.getString("MEMBER_NAME"),
									  rset.getString("GENDER").charAt(0),
									  rset.getString("EMAIL"),
									  rset.getString("PHONE"),
									  rset.getInt("AGE"),
									  rset.getString("ADDRESS"),
									  rset.getDate("ENROLL_DATE"));
				list.add(m);
			}
		} catch (SQLException e) {
			e.printStackTrace();
		} finally {
			close(rset);
			close(stmt);
		}
		
		//방법2. String query = "SELECT * FROM MEMBER WHERE MEMBER_ID LIKE '%?%'";-->미완성형 쿼리
		
		return list;
	}

	public ArrayList<Member> selectGender(Connection conn, char gen) {
		
		return null;
	}

	public ArrayList<Member> selectAll(conn) {
		ArrayList<Member> list = new ArrayList<Member>();
		String query = "SELECT * FROM MEMBER";
		Statement stmt = conn.createStatement();
		
		
		return ;
	}
	

}
