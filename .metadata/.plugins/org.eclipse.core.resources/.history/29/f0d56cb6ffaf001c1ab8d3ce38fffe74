package com.kh.model.dao;

import java.sql.Connection;
import java.sql.Date;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;

import com.kh.model.vo.Employee;

public class EmployeeDAO {

	public void selectAll() {
		// JDBC드라이버 등록
		try {
			Class.forName("oracle.jdbc.driver.OracleDriver");
			
			Connection conn = DriverManager.getConnection("jdbc:oracle:thin:@127.0.0.1:1522:orcl", "SCOTT", "SCOTT");
			//jdbc:oracle:thin -->jdbc드라이버 타입
			//@127.0.0.1 --> 접근해야하는 데이터베이스의 ip주소값(내 컴퓨터에 대한 주소값)
			//1521 : 오라클 listener의 포트번호
			//xe : 오라클SID
			//"계정", "계정비밀번호"
			
			System.out.println(conn);
		
			String query = "SELECT * FROM EMP";//쿼리를 데이터베이스에 전달하는 역할-->커넥션 이용
			
			Statement stmt = conn.createStatement();//
			ResultSet rset = stmt.executeQuery(query);//ResultSet : emp전체사원정보
			
			//ResultSet에 쿼리문에 대한 결과 값이 담겨져 있는 상태이긴 하지만
			//ResultSet자체로 활용할 수 없으니 ResultSet안에 담겨있는 데이터를 다른 객체에 옮겨 담을 것
			//-->여러 개를 담을 수 있는 객체가 좋겠다.(배열 or 컬렉션V) + 각 컬럼의 정보를 하나씩 담을 수 있게 Employee객체 사용
			ArrayList<Employee> list = new ArrayList();//순서지키기위해
			while(rset.next()) {
				//ResultSet.next() : 다음 행이 존재하면 true반환, 없으면 false반환
				int empNo = rset.getInt("EMPNO");//변수에 담음 = 리절트셋 안에 있는 NUMBER타입 EMPNO을 가져온다.
				String empName = rset.getString("ENAME");//변수에 담음 = 리절트셋 안에 있는 VRCHAR2타입 ENAME을 가져온다.
				String job = rset.getString("JOB");
				int mgr = rset.getInt("MGR");
				Date hireDate =rset.getDate("HIREDATE");
				int sal = rset.getInt("SAL");
				int comm = rset.getInt("COMM");
				int deptno = rset.getInt("DEPTNO");
				
				Employee e = new Employee(empNo, empName, job, mgr, hireDate, sal, comm, deptno);
				list.add(e);//ArrayList<Employee> list = new ArrayList();에 담기
			}
			
			
			
		} catch (ClassNotFoundException e) {
			e.printStackTrace();
		} catch (SQLException e) {
			e.printStackTrace();
		}
	}

}
